######
# top-level Makefile for XMHF
# author: amit vasudevan (amitvasudevan@acm.org)
######

include ./uxmhf-common.mk



######
# uXMHF build variables
######

## bootloader source path
export XMHF_BOOTLOADER_SRC := $(realpath $(XMHF_DIR)/xmhf-bootloader)

## uXMHF specific libraries
export LIBXMHFDEBUG_SRC := $(realpath $(XMHF_DIR)/libs/libxmhfdebug)
export LIBXMHFGEEC_SRC := $(realpath $(XMHF_DIR)/libs/libxmhfgeec)

## uobj source paths and count
#export XMHF_SLAB_DIRS := $(shell awk -F, '{print $$1}' $(XMHF_DIR)/xmhf-uobjs/UOBJLIST)
export XMHF_SLAB_DIRS := $(shell sed '1,2d;$$d' ~/data/hypcode/projs/pubrepos-bleeding-edge/uberxmhf.git/uxmhf/xmhf-uobjs/UOBJLIST | sed '$$d' | awk '{$$1=$$1;print}')
XMHF_SLAB_NAMES := $(notdir $(XMHF_SLAB_DIRS))
#export XMHF_SLAB_TOTAL := $(shell wc -l < $(XMHF_DIR)/xmhf-uobjs/UOBJLIST)
export XMHF_SLAB_TOTAL := $(shell sed '1,2d;$$d' $(XMHF_DIR)/xmhf-uobjs/UOBJLIST | sed '$$d' | awk '{$$1=$$1;print}' | wc -l)



######
# top-level build targets
######


######
# uxmhf image
.PHONY: uxmhf-image
uxmhf-image: uxmhf-libs uxmhf-uobjsbuild uxmhf-bootloader uxmhf-binimage




######
# uxmhf-libs build

.PHONY: _libxmhfdebug
_libxmhfdebug:
	@echo building libxmhfdebug...
	$(MKDIR) -p $(XMHF_LIBS_OBJECTS_DIR)
	cd $(XMHF_LIBS_OBJECTS_DIR) &&	$(MAKE) -f $(LIBXMHFDEBUG_SRC)/Makefile -w all
	@echo libxmhfdebug built sucessfully.


.PHONY: _libxmhfgeec
_libxmhfgeec:
	@echo building libxmhfgeec...
	$(MKDIR) -p $(XMHF_LIBS_OBJECTS_DIR)
	cd $(XMHF_LIBS_OBJECTS_DIR) &&	$(MAKE) -f $(LIBXMHFGEEC_SRC)/Makefile -w all
	@echo libxmhfgeec built sucessfully.
	

.PHONY: uxmhf-libs
uxmhf-libs: _libxmhfdebug _libxmhfgeec



######
# uxmhf uobj manifest/infotable related build harness


.PHONY: _uobjs_preprocessmanifests
_uobjs_preprocessmanifests:
	mkdir -p $(XMHF_OBJDIR)
	@for i in $(XMHF_SLAB_NAMES); \
	do \
		(cd $(XMHF_OBJDIR) && echo "Prepping uobj manifest for $$i..." && $(CP) -f $(XMHF_DIR)/xmhf-uobjs/$$i/$$i.gsm $$i.gsm.c && $(CCERT) -E $(CCERT_CFLAGS) -D__ASSEMBLY__ $$i.gsm.c >$(XMHF_DIR)/xmhf-uobjs/$$i/$$i.gsm.pp) || exit 1; \
	done;
	@echo uobj manifests prepped

.PHONY: _uobjs_configureandgenerateuobjinfonoexports
#_uobjs_configureandgenerateuobjinfonoexports: _uobjs_preprocessmanifests
_uobjs_configureandgenerateuobjinfonoexports:
	#cd $(XMHF_DIR) && $(FRAMAC) -load-module $(USPARK_INSTALL_TOOLSDIR)/Umf -umf-uobjlist $(XMHF_DIR)/UOBJLIST -umf-uobjconfigurescript $(XMHF_DIR)/configure-uxmhfuobj -umf-outuobjinfotable $(XMHF_OBJDIR)/uobjinfotable.c -umf-outlinkerscript $(XMHF_OBJDIR)/xmhf.lscript -umf-loadaddr $(XMHF_CONFIG_LOADADDR) -umf-loadmaxsize $(XMHF_CONFIG_LOADMAXSIZE) -umf-totaluhuobjs $(XMHFGEEC_TOTAL_UHSLABS) -umf-maxincldevlistentries $(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES) -umf-maxexcldevlistentries $(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES) -umf-maxmemoffsetentries $(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES)
	cd $(XMHF_DIR) && $(USPARK_INSTALL_TOOLSDIR)/umf $(XMHF_DIR)/xmhf-uobjs/UOBJLIST $(XMHF_DIR)/configure-uxmhfuobj $(XMHF_OBJDIR)/uobjinfotable.c $(XMHF_OBJDIR)/xmhf.lscript $(XMHF_CONFIG_LOADADDR) $(XMHF_CONFIG_LOADMAXSIZE) $(XMHFGEEC_TOTAL_UHSLABS) $(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES) $(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES) $(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES) 0 "$(CCERT_CFLAGS)"

.PHONY: _uobjs_generateuobjinfoexports
#_uobjs_generateuobjinfoexports: _uobjs_preprocessmanifests
_uobjs_generateuobjinfoexports:
	@echo generating uobj info table with memoffsets...
	#cd $(XMHF_DIR) && $(FRAMAC) -load-module $(USPARK_INSTALL_TOOLSDIR)/Umf -umf-uobjlist $(XMHF_DIR)/UOBJLIST -umf-uobjconfigurescript $(XMHF_DIR)/configure-uxmhfuobj -umf-outuobjinfotable $(XMHF_OBJDIR)/uobjinfotable.c -umf-outlinkerscript $(XMHF_OBJDIR)/xmhf.lscript -umf-loadaddr $(XMHF_CONFIG_LOADADDR) -umf-loadmaxsize $(XMHF_CONFIG_LOADMAXSIZE) -umf-totaluhuobjs $(XMHFGEEC_TOTAL_UHSLABS) -umf-maxincldevlistentries $(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES) -umf-maxexcldevlistentries $(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES) -umf-maxmemoffsetentries $(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES) -umf-memoffsets
	cd $(XMHF_DIR) && $(USPARK_INSTALL_TOOLSDIR)/umf $(XMHF_DIR)/xmhf-uobjs/UOBJLIST $(XMHF_DIR)/configure-uxmhfuobj $(XMHF_OBJDIR)/uobjinfotable.c $(XMHF_OBJDIR)/xmhf.lscript $(XMHF_CONFIG_LOADADDR) $(XMHF_CONFIG_LOADMAXSIZE) $(XMHFGEEC_TOTAL_UHSLABS) $(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES) $(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES) $(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES) 1 "$(CCERT_CFLAGS)"
	@echo uobj info table with memoffsets ready.
	
.PHONY: uobjinfotable_buildpass1
uobjinfotable_buildpass1:
	@echo building uobjinfotable pass1...
	$(MKDIR) -p $(XMHF_OBJDIR)
	cd $(XMHF_OBJDIR) && $(CCERT) -c $(CCERT_CFLAGS) -o $(XMHF_OBJDIR)/uobjinfotable.o uobjinfotable.c
	@echo uobjinfotable pass1 built sucessfully.

.PHONY: uobjinfotable_buildpass2
uobjinfotable_buildpass2:
	@echo building uobjinfotable pass2...
	$(MKDIR) -p $(XMHF_OBJDIR)
	cd $(XMHF_OBJDIR) && $(CCERT) -c $(CCERT_CFLAGS) -o $(XMHF_OBJDIR)/uobjinfotable.o uobjinfotable.c
	@echo uobjinfotable pass2 built sucessfully.
	
	
######
# uxmhf uobj build
	
.PHONY: uxmhf-uobjsbuild
uxmhf-uobjsbuild: uobjs_buildpass1 uobjs_buildpass2

.PHONY: uobjs_buildpass1
uobjs_buildpass1: _uobjs_configureandgenerateuobjinfonoexports uobjinfotable_buildpass1 
	@echo Building uobjs - pass1...
	@echo $(XMHF_SLAB_DIRS)
	@echo $(XMHF_SLAB_TOTAL)
	@for i in $(XMHF_SLAB_DIRS); \
	do \
		(cd $(XMHF_OBJDIR) &&	echo "Making all in $$i..." && $(MAKE) -f $(XMHF_DIR)/xmhf-uobjs/$$i/Makefile -w all) || exit 1; \
	done;
	@echo uobjs build pass1 SUCCESS

.PHONY: uobjs_buildpass2
uobjs_buildpass2: _uobjs_generateuobjinfoexports uobjinfotable_buildpass2
	@echo Building uobjs - pass2...
	@for i in $(XMHF_SLAB_DIRS); \
	do \
		(cd $(XMHF_OBJDIR) &&	echo "Making all in $$i..." && $(MAKE) -f $(XMHF_DIR)/xmhf-uobjs/$$i/Makefile -w linkslabbin) || exit 1; \
	done;
	@echo uobjs build pass2 SUCCESS




######
# uxmhf bootloader
.PHONY: uxmhf-bootloader
uxmhf-bootloader:  
	@echo Building XMHF boot loader...
	cd $(XMHF_OBJDIR) && $(MAKE) -f $(XMHF_BOOTLOADER_SRC)/Makefile -w all
	@echo XMHF boot loader build SUCCESS



######
# uxmhf binary image
.PHONY: uxmhf-binimage
uxmhf-binimage:
	@echo Generating uXMHF binary image...
	cd $(XMHF_OBJDIR) && $(CP) -f xmhf.lscript xmhf.lscript.c
	cd $(XMHF_OBJDIR) && $(CC) $(ASMFLAGS) -P -E xmhf.lscript.c -o xmhf.lds
	cd $(XMHF_OBJDIR) && $(LD) --oformat elf32-i386 -T xmhf.lds -o xmhf.exe 
	cd $(XMHF_OBJDIR) && $(OBJCOPY) --output-format=binary xmhf.exe xmhf.bin
	cd $(XMHF_OBJDIR) && $(CAT) ./_objs_xmhf-bootloader/xmhf-bootloader.bin ./xmhf.bin > ./xmhf.tmp.img
	cd $(XMHF_OBJDIR) && gzip -c ./xmhf.tmp.img > ./xmhf-$(XMHF_TARGET_TRIAD).bin.gz
	cd $(XMHF_OBJDIR) && $(RM) -rf ./xmhf.tmp.img
	@echo uXMHF binary image generation SUCCESS


	
######
# uxmhf verify targets

.PHONY: uxmhf-verif-gensentinelstubs
uxmhf-verif-gensentinelstubs: _uobjs_configureandgenerateuobjinfonoexports
		@echo Proceeding to generate sentinel stubs for blueprint conformance...
		$(MKDIR) -p $(XMHF_OBJDIR)/_verif_bp
		#cd $(XMHF_DIR) && $(FRAMAC) -load-module $(USPARK_INSTALL_TOOLSDIR)/Ubp -umf-uobjlist $(XMHF_DIR)/UOBJLIST -umf-outdirsentinelstubs $(XMHF_OBJDIR)/_verif_bp/  -umf-maxincldevlistentries $(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES) -umf-maxexcldevlistentries $(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES) -umf-maxmemoffsetentries $(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES)
		cd $(XMHF_DIR) && $(USPARK_INSTALL_TOOLSDIR)/ubp $(XMHF_DIR)/UOBJLIST $(XMHF_OBJDIR)/_verif_bp/ $(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES) $(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES) $(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES) 0
		@echo sentinel stubs generated

	
.PHONY: uxmhf-verifyuobjs-compcheck
#uxmhf-verifyuobjs-compcheck: _uobjs_preprocessmanifests
uxmhf-verifyuobjs-compcheck:
	@echo Proceeding to generate composition check files...
	$(MKDIR) -p $(XMHF_OBJDIR)/_verif_ccomp
	#cd $(XMHF_DIR) && $(FRAMAC) -load-module $(USPARK_INSTALL_TOOLSDIR)/Uccomp -umf-uobjlist $(XMHF_DIR)/UOBJLIST -umf-outuobjccompdriver $(XMHF_OBJDIR)/_verif_ccomp/ccompdriverfile.c.v.c -umf-outuobjccompcheck $(XMHF_OBJDIR)/_verif_ccomp/ccompcheckfile.c.v.c  -umf-maxincldevlistentries $(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES) -umf-maxexcldevlistentries $(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES) -umf-maxmemoffsetentries $(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES)
	cd $(XMHF_DIR) && $(USPARK_INSTALL_TOOLSDIR)/uccomp $(XMHF_DIR)/UOBJLIST $(XMHF_OBJDIR)/_verif_ccomp/ccompdriverfile.c.v.c $(XMHF_OBJDIR)/_verif_ccomp/ccompcheckfile.c.v.c $(XMHF_CONFIG_MAX_INCLDEVLIST_ENTRIES)  $(XMHF_CONFIG_MAX_EXCLDEVLIST_ENTRIES) $(XMHF_CONFIG_MAX_MEMOFFSET_ENTRIES) 0
	@echo composition check files generated
	cd $(XMHF_OBJDIR)/_verif_ccomp && $(FRAMAC) -val -no-val-show-progress -slevel 2048 -cpp-extra-args=-nostdinc $(VFLAGS) ccompdriverfile.c.v.c ccompcheckfile.c.v.c

	
.PHONY: uxmhf-verifyuobjs-prep
uxmhf-verifyuobjs-prep: _uobjs_configureandgenerateuobjinfonoexports uxmhf-verif-gensentinelstubs


.PHONY: uxmhf-verifyuobjs-all
uxmhf-verifyuobjs-all: uxmhf-verifyuobjs-prep 
	@for i in $(XMHF_SLAB_NAMES); \
	do \
		(cd $(XMHF_DIR)/xmhf-uobjs/$$i && echo "Verifying uobj $$i..." && $(MAKE) -w verify) || exit 1; \
	done;
	@echo All uobjs verified!

	
######
# uxmhf cleanup targets
	
.PHONY: clean 
clean:
	#$(RM) -f $(XMHF_DIR)/uxmhf/xmhf-uobjs/geec_sentinel/__geec_sentinel_autogendata_slabinfotable
	$(RM) -rf $(XMHF_OBJDIR)

# http://www.gnu.org/software/automake/manual/automake.html#Clean
distclean: clean
	$(RM) config.log config.status
	$(RM) -rf Makefile


	
	
######
# uxmhf autoconf targets

Makefile: Makefile.in config.status
	./config.status $@

config.status: configure
	./config.status --recheck

configure: configure.ac
	autoconf --output=configure configure.ac

